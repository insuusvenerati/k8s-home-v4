---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      version: 63.1.0
  interval: 1h0m0s
  releaseName: kube-prometheus-stack
  targetNamespace: monitoring
  install:
    crds: Create
  upgrade:
    disableSchemaValidation: true
    crds: CreateReplace
  driftDetection:
    mode: enabled
    ignore:
      - paths:
          - "/metadata/annotations/prometheus-operator-validated"
        target:
          kind: PrometheusRule
  valuesFrom:
    - kind: ConfigMap
      name: flux-kube-state-metrics-config
      valuesKey: kube-state-metrics-config.yaml
  values:
    namespaceOverride: "monitoring"
    defaultRules:
      rules:
        kubeProxy: false
    alertmanager:
      enabled: true
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - alertmanager.internal.${SECRET_DOMAIN}
        paths:
          - /
        tls:
          - secretName: alertmanager-general-tls
            hosts:
              - alertmanager.internal.${SECRET_DOMAIN}
    grafana:
      image:
        # -- The Docker registry
        registry: docker.io
        # -- Docker image repository
        repository: grafana/grafana
        # Overrides the Grafana image tag whose default is the chart appVersion
        tag: 11.2.1
      sidecar:
        prune: true
        datasources:
          enabled: true
      envValueFrom:
        INFLUXDB_API_TOKEN:
          secretKeyRef:
            name: influx-credentials
            key: INFLUXDB_API_TOKEN
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - grafana.internal.${SECRET_DOMAIN}
        tls:
          - secretName: grafana-tls
            hosts:
              - grafana.internal.${SECRET_DOMAIN}
      persistence:
        type: pvc
        enabled: true
        size: 5Gi
        storageClasName: nfs-client-ssd
    kubeApiServer:
      enabled: true
      tlsConfig:
        insecureSkipVerify: true
    kubelet:
      enabled: true
    kubeControllerManager:
      enabled: true
      service:
        enabled: true
        port: 10257
        targetPort: 10257
        selector:
          k8s-app: kube-controller-manager
      serviceMonitor:
        insecureSkipVerify: true
    coreDns:
      enabled: true
      service:
        enabled: true
        selector:
          k8s-app: kube-dns
    kubeEtcd:
      enabled: true
      endpoints:
        - 192.168.1.135
      service:
        enabled: true
    kubeScheduler:
      enabled: true
      service:
        enabled: true
        port: 10259
        targetPort: 10259
        selector:
          k8s-app: kube-scheduler
      serviceMonitor:
        insecureSkipVerify: true
    kubeProxy:
      enabled: false
      service:
        enabled: true
        selector:
          k8s-app: kube-proxy
    prometheus:
      prometheusSpec:
        enableRemoteWriteReceiver: true
        retention: 24h
        resources:
          requests:
            cpu: 200m
            memory: 200Mi
        podMonitorNamespaceSelector:
          matchLabels: null
        serviceMonitorSelector:
          matchLabels: null
        ruleSelector:
          matchLabels: null
        probeSelector:
          matchLabels: null
        scrapeConfigSelector:
          matchLabels: null
