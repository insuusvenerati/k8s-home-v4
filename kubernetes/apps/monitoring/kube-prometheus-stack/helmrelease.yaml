---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      version: 62.6.0
  interval: 1h0m0s
  releaseName: kube-prometheus-stack
  targetNamespace: monitoring
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
  driftDetection:
    mode: enabled
    ignore:
      - paths:
          - "/metadata/annotations/prometheus-operator-validated"
        target:
          kind: PrometheusRule
  valuesFrom:
    - kind: ConfigMap
      name: flux-kube-state-metrics-config
      valuesKey: kube-state-metrics-config.yaml
  values:
    alertmanager:
      enabled: false
    grafana:
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - grafana.internal.${SECRET_DOMAIN}
        tls:
          - secretName: grafana-tls
            hosts:
              - grafana.internal.${SECRET_DOMAIN}
    prometheus:
      prometheusSpec:
        retention: 24h
        resources:
          requests:
            cpu: 200m
            memory: 200Mi
        podMonitorNamespaceSelector: { }
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        additionalScrapeConfigs:
          - job_name: 'istiod'
            kubernetes_sd_configs:
              - role: endpoints
                namespaces:
                  names:
                    - istio-system
            relabel_configs:
              - source_labels: [ __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name ]
                action: keep
                regex: istiod;http-monitoring
          - job_name: 'envoy-stats'
            metrics_path: /stats/prometheus
            kubernetes_sd_configs:
              - role: pod
            relabel_configs:
              - source_labels: [ __meta_kubernetes_pod_container_port_name ]
                action: keep
                regex: '.*-envoy-prom'
          - job_name: 'istio-ztunnel'
            metrics_path: /stats/prometheus
            kubernetes_sd_configs:
              - role: pod
                namespaces:
                  names:
                    - istio-system
            relabel_configs:
              - source_labels: [__meta_kubernetes_pod_ip]
                action: replace
                target_label: __address__
                regex: (.+)
                replacement: $1:15020
              - source_labels: [ __meta_kubernetes_pod_container_name ]
                action: keep
                regex: istio-proxy  # Match the ztunnel container
              - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_scrape ]
                action: keep
                regex: true
              - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_path ]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels: [ __meta_kubernetes_pod_annotation_prometheus_io_port ]
                action: replace
                target_label: __address__
                regex: (.+)
                replacement: $1
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - source_labels: [ __meta_kubernetes_namespace ]
                action: replace
                target_label: namespace
              - source_labels: [ __meta_kubernetes_pod_name ]
                action: replace
                target_label: pod
