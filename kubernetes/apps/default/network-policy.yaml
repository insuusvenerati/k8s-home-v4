#apiVersion: cilium.io/v2
#kind: CiliumNetworkPolicy
#metadata:
#  name: allow-all-within-namespace
#  namespace: default
#spec:
#  description: Allow all within namespace
#  egress:
#    - toEndpoints:
#        - { }
#  endpointSelector: { }
#  ingress:
#    - fromEndpoints:
#        - { }
#---
#apiVersion: cilium.io/v2
#kind: CiliumNetworkPolicy
#metadata:
#  name: dns-visibility
#  namespace: default
#spec:
#  egress:
#    - toEndpoints:
#        - matchLabels:
#            k8s:io.kubernetes.pod.namespace: kube-system
#            k8s:k8s-app: kube-dns
#      toPorts:
#        - ports:
#            - port: "53"
#              protocol: ANY
#          rules:
#            dns:
#              - matchPattern: '*'
#    - toFQDNs:
#        - matchPattern: '*'
#    - toEntities:
#        - all
#  endpointSelector:
#    matchLabels: { }
#---
#apiVersion: cilium.io/v2
#kind: CiliumNetworkPolicy
#metadata:
#  name: l7-egress-visibility
#  namespace: default
#spec:
#  description: L7 policy
#  egress:
#    - toEntities:
#        - world
#  endpointSelector: { }
#---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: nginx-ingress-istio-l7-policy
  namespace: network # Adjust the namespace if needed
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/instance: ingress-nginx-internal
  ingress:
    # Allow traffic from the external world (e.g., the internet) on ports 80 and 443
    - fromEntities:
        - world # This allows ingress traffic from the internet
      toPorts:
        - ports:
            - port: "80"
              protocol: TCP
            - port: "443"
              protocol: TCP
    # Allow traffic from Istio sidecar (internal mesh traffic)
    - fromEndpoints:
        - matchLabels:
            app: istio-proxy # Targeting Istio sidecar for ingress
      toPorts:
        - ports:
            - port: "80"
              protocol: TCP
            - port: "443"
              protocol: TCP
          rules:
            http:
              - method: GET
                path: "/.*" # Allow all GET requests
              - method: POST
                path: "/.*" # Allow all POST requests
    - fromEndpoints:
        - matchLabels:
            name: prometheus
      toPorts:
        - ports:
            - port: "10254"
              protocol: TCP
  egress:
    - toEntities:
        - all
    - toEndpoints:
        - matchLabels:
            istio: sidecar-proxy # Ensuring traffic goes to the Istio sidecar
      toPorts:
        - ports:
            - port: "80"
              protocol: TCP
            - port: "443"
              protocol: TCP
    - toPorts:
        - ports:
            - port: "15006"
              protocol: TCP
          rules:
            http:
              - path: "/.*" # Visibility for HTTP requests through Istio sidecars
                method: GET
              - path: "/.*"
                method: POST
