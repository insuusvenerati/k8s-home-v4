---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prowlarr
  namespace: default
spec:
  chartRef:
    kind: OCIRepository
    name: prowlarr
    namespace: flux-system
  interval: 6h0m0s
  releaseName: prowlarr
  targetNamespace: default
  values:
    configmap:
      dashboard:
        data:
          prowlarr.json: '{{ .Files.Get "dashboard.json" | indent 8 }}'
        enabled: true
        labels:
          grafana_dashboard: "1"
    exportarrImage:
      pullPolicy: IfNotPresent
      repository: ghcr.io/onedr0p/exportarr
      tag: v2.0.1@sha256:727e7bc8f2f0934a2117978c59f4476b954018b849a010ea6cfb380bd6539644
    image:
      pullPolicy: IfNotPresent
      repository: ghcr.io/onedr0p/prowlarr-develop
      tag: 1.24.3.4754@sha256:9c88257656e4ac893d692abf38a784c80ef1638eb99fae376bdb48f75498ce52
    metrics:
      main:
        enabled: true
        endpoints:
        - path: /metrics
          port: metrics
        prometheusRule:
          enabled: false
        targetSelector: metrics
        type: servicemonitor
    persistence:
      config:
        enabled: true
        targetSelector:
          main:
            exportarr:
              mountPath: /config
              readOnly: true
            main:
              mountPath: /config
    portal:
      open:
        enabled: true
    securityContext:
      container:
        readOnlyRootFilesystem: false
    service:
      main:
        ports:
          main:
            port: 9696
      metrics:
        enabled: '{{ .Values.metrics.main.enabled }}'
        ports:
          metrics:
            enabled: true
            port: 9697
        type: ClusterIP
    updated: true
    workload:
      main:
        podSpec:
          containers:
            exportarr:
              args:
              - prowlarr
              enabled: '{{ .Values.metrics.main.enabled }}'
              env:
                CONFIG: /config/config.xml
                INTERFACE: 0.0.0.0
                PORT: '{{ .Values.service.metrics.ports.metrics.port }}'
                URL: '{{ printf "http://%v:%v" (include "tc.v1.common.lib.chart.names.fullname"
                  $) .Values.service.main.ports.main.port }}'
              envFrom:
                - secretRef:
                    name: prowlarr-apikey
                    expandObjectName: false
              imageSelector: exportarrImage
              probes:
                liveness:
                  enabled: true
                  path: /healthz
                  port: '{{ .Values.service.metrics.ports.metrics.port }}'
                  type: http
                readiness:
                  enabled: true
                  path: /healthz
                  port: '{{ .Values.service.metrics.ports.metrics.port }}'
                  type: http
                startup:
                  enabled: true
                  path: /healthz
                  port: '{{ .Values.service.metrics.ports.metrics.port }}'
                  type: http
            main:
              env:
                PROWLARR__AUTHENTICATION_METHOD: ""
                PROWLARR__PORT: '{{ .Values.service.main.ports.main.port }}'
              probes:
                liveness:
                  path: /ping
                readiness:
                  path: /ping
                startup:
                  type: tcp
